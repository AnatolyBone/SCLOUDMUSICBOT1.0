// services/referralManager.js (—É–ª—É—á—à–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)

import { setTariffAdmin, getUser, logUserAction } from '../db.js';
import { bot } from '../bot.js';

const REFERRER_BONUS_DAYS = 3;   // –±–æ–Ω—É—Å –∑–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–µ—Ä—É
const NEW_USER_BONUS_DAYS = 3;   // –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –±–æ–Ω—É—Å –Ω–æ–≤–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é

// ========================= HELPER FUNCTIONS =========================

/**
 * –°–∫–ª–æ–Ω–µ–Ω–∏–µ —Å–ª–æ–≤–∞ "–¥–µ–Ω—å/–¥–Ω—è/–¥–Ω–µ–π"
 */
function pluralDays(n) {
  const a = Math.abs(n) % 100;
  const b = a % 10;
  if (a > 10 && a < 20) return '–¥–Ω–µ–π';
  if (b > 1 && b < 5) return '–¥–Ω—è';
  if (b === 1) return '–¥–µ–Ω—å';
  return '–¥–Ω–µ–π';
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–µ—Ä—É –æ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–∏ –±–æ–Ω—É—Å–∞
 */
async function notifyReferrer(referrerId, days, isProlongation = false) {
  const action = isProlongation 
    ? '–ø—Ä–æ–¥–ª–∏–ª–∏ –≤–∞—à—É —Ç–µ–∫—É—â—É—é –ø–æ–¥–ø–∏—Å–∫—É' 
    : `–Ω–∞—á–∏—Å–ª–∏–ª–∏ –≤–∞–º ${days} ${pluralDays(days)} —Ç–∞—Ä–∏—Ñ–∞ Plus`;
  
  const message = 
    `ü•≥ –ü–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å!\n\n` +
    `–ú—ã <b>${action}</b>. –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã —Å –Ω–∞–º–∏!`;
  
  try {
    await bot.telegram.sendMessage(referrerId, message, { parse_mode: 'HTML' });
  } catch (e) {
    if (e?.response?.error_code === 403) {
      console.log(`[Referral] –†–µ—Ñ–µ—Ä ${referrerId} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞, –ø—Ä–æ–ø—É—Å–∫–∞—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.`);
    } else {
      console.error(`[Referral] –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–µ—Ä—É ${referrerId}:`, e.message);
    }
  }
}

// ========================= MAIN FUNCTIONS =========================

/**
 * –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏
 */
export async function handleReferralCommand(ctx) {
  const userId = ctx.from.id;
  const botUsername = ctx.botInfo.username;
  const referralLink = `https://t.me/${botUsername}?start=ref_${userId}`;
  
  const message = 
    `üôã‚Äç‚ôÇÔ∏è **–ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –±–æ–Ω—É—Å—ã!**\n\n` +
    `–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–µ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π —Å –¥—Ä—É–∑—å—è–º–∏. –ó–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–ø—É—Å—Ç–∏—Ç –±–æ—Ç–∞ –ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ, ` +
    `–≤—ã –ø–æ–ª—É—á–∏—Ç–µ **+${REFERRER_BONUS_DAYS} ${pluralDays(REFERRER_BONUS_DAYS)} —Ç–∞—Ä–∏—Ñ–∞ Plus**! üéÅ\n\n` +
    `–í–∞—à –¥—Ä—É–≥ —Ç–∞–∫–∂–µ –ø–æ–ª—É—á–∏—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –±–æ–Ω—É—Å.\n\n` +
    `üîó **–í–∞—à–∞ —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π:**\n` +
    `\`${referralLink}\`\n\n` +
    `*(–ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Å—Å—ã–ª–∫—É, —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –µ—ë)*`;
  
  await ctx.reply(message, { 
    parse_mode: 'Markdown', 
    disable_web_page_preview: true 
  });
}

/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ –±–æ–Ω—É—Å–æ–≤ –ø—Ä–∏ –ø—Ä–∏—Ö–æ–¥–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ
 */
export async function processNewUserReferral(newUser, ctx) {
  // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—à—ë–ª –±–µ–∑ —Ä–µ—Ñ–µ—Ä–µ—Ä–∞ ‚Äî –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
  if (!newUser?.referrer_id) return;

  const referrerId = newUser.referrer_id;
  console.log(`[Referral] –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${newUser.id} –ø—Ä–∏—à–µ–ª –æ—Ç ${referrerId}. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –±–æ–Ω—É—Å—ã...`);

  try {
    // --- 1) –ë–æ–Ω—É—Å –Ω–æ–≤–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ---
    await setTariffAdmin(newUser.id, 30, NEW_USER_BONUS_DAYS, { mode: 'extend' });
    
    await ctx.reply(
      `üéâ –í –∫–∞—á–µ—Å—Ç–≤–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –±–æ–Ω—É—Å–∞ –º—ã –Ω–∞—á–∏—Å–ª–∏–ª–∏ –≤–∞–º ` +
      `<b>${NEW_USER_BONUS_DAYS} ${pluralDays(NEW_USER_BONUS_DAYS)} —Ç–∞—Ä–∏—Ñ–∞ Plus!</b>`,
      { parse_mode: 'HTML' }
    );
    
    await logUserAction(newUser.id, 'referral_bonus_received', { 
      type: 'new_user', 
      days: NEW_USER_BONUS_DAYS, 
      limit: 30 
    });

    // --- 2) –ë–æ–Ω—É—Å —Ä–µ—Ñ–µ—Ä–µ—Ä—É ---
    const referrer = await getUser(referrerId);
    if (!referrer) {
      console.warn(`[Referral] –†–µ—Ñ–µ—Ä ${referrerId} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ë–î.`);
      return;
    }

    if (referrer.premium_limit > 30) {
      // –£ —Ä–µ—Ñ–µ—Ä–µ—Ä–∞ —Ç–∞—Ä–∏—Ñ –≤—ã—à–µ —á–µ–º Plus ‚Äî –ø—Ä–æ–¥–ª–µ–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –ª–∏–º–∏—Ç
      await setTariffAdmin(
        referrer.id, 
        referrer.premium_limit, 
        REFERRER_BONUS_DAYS, 
        { mode: 'extend' }
      );
      
      console.log(`[Referral] –†–µ—Ñ–µ—Ä–µ—Ä ${referrerId} –∏–º–µ–µ—Ç —Ç–∞—Ä–∏—Ñ ${referrer.premium_limit}. –ü—Ä–æ–¥–ª–µ–≤–∞–µ–º –Ω–∞ ${REFERRER_BONUS_DAYS} ${pluralDays(REFERRER_BONUS_DAYS)}.`);
      
      await notifyReferrer(referrerId, REFERRER_BONUS_DAYS, true);
      
      await logUserAction(referrerId, 'referral_bonus_received', {
        type: 'referrer',
        days: REFERRER_BONUS_DAYS,
        limit: referrer.premium_limit,
        referred_user_id: newUser.id
      });
    } else {
      // –í—ã–¥–∞—ë–º/–ø—Ä–æ–¥–ª–µ–≤–∞–µ–º Plus
      await setTariffAdmin(referrer.id, 30, REFERRER_BONUS_DAYS, { mode: 'extend' });
      
      console.log(`[Referral] –†–µ—Ñ–µ—Ä–µ—Ä ${referrerId} –ø–æ–ª—É—á–∞–µ—Ç Plus –Ω–∞ ${REFERRER_BONUS_DAYS} ${pluralDays(REFERRER_BONUS_DAYS)}.`);
      
      await notifyReferrer(referrerId, REFERRER_BONUS_DAYS, false);
      
      await logUserAction(referrerId, 'referral_bonus_received', {
        type: 'referrer',
        days: REFERRER_BONUS_DAYS,
        limit: 30,
        referred_user_id: newUser.id
      });
    }
  } catch (e) {
    console.error(`[Referral] –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –±–æ–Ω—É—Å–∞ –¥–ª—è ${newUser.id} –∏ ${referrerId}:`, e);
  }
}

// ========================= EXPORTS SUMMARY =========================
// - handleReferralCommand: –∫–æ–º–∞–Ω–¥–∞ /referral –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏
// - processNewUserReferral: –æ–±—Ä–∞–±–æ—Ç–∫–∞ –±–æ–Ω—É—Å–æ–≤ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è