// services/referralManager.js (–ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø)

import { setPremium } from '../db.js';

const REFERRER_BONUS_DAYS = 3;
const NEW_USER_BONUS_DAYS = 3;

export async function handleReferralCommand(ctx) {
    const userId = ctx.from.id;
    const botUsername = ctx.botInfo.username;
    const referralLink = `https://t.me/${botUsername}?start=ref_${userId}`;
    const message = `
üôã‚Äç‚ôÇÔ∏è **–ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –±–æ–Ω—É—Å—ã!**

–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–µ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π —Å –¥—Ä—É–∑—å—è–º–∏. –ó–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–ø—É—Å—Ç–∏—Ç –±–æ—Ç–∞ –ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ, –≤—ã –ø–æ–ª—É—á–∏—Ç–µ **+${REFERRER_BONUS_DAYS} –¥–Ω—è —Ç–∞—Ä–∏—Ñ–∞ Plus**! üéÅ

–í–∞—à –¥—Ä—É–≥ —Ç–∞–∫–∂–µ –ø–æ–ª—É—á–∏—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –±–æ–Ω—É—Å.

üîó **–í–∞—à–∞ —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π:**
\`${referralLink}\`

*(–ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Å—Å—ã–ª–∫—É, —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –µ—ë)*
    `;
    await ctx.reply(message, { parse_mode: 'Markdown', disable_web_page_preview: true });
}

export async function processNewUserReferral(newUser, ctx) {
    if (!newUser.referrer_id) return;

    console.log(`[Referral] –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${newUser.id} –ø—Ä–∏—à–µ–ª –æ—Ç ${newUser.referrer_id}`);
    const referrerId = newUser.referrer_id;

    try {
        await setPremium(referrerId, 30, REFERRER_BONUS_DAYS, true);
        const friendName = ctx.from.first_name || '–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
        
        // –ò–°–ü–û–õ–¨–ó–£–ï–ú ctx.telegram –í–ú–ï–°–¢–û bot.telegram
        await ctx.telegram.sendMessage(
            referrerId,
            `üéâ –í–∞—à –¥—Ä—É–≥ **${friendName}** –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ!\n\n–í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ **+${REFERRER_BONUS_DAYS} –¥–Ω—è —Ç–∞—Ä–∏—Ñ–∞ Plus**. –°–ø–∞—Å–∏–±–æ!`,
            { parse_mode: 'Markdown' }
        ).catch(e => console.error(`[Referral] –ù–µ —É–¥–∞–ª–æ—Å—å —É–≤–µ–¥–æ–º–∏—Ç—å ${referrerId}:`, e.message));

    } catch (e) {
        console.error(`[Referral] –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—á–∏—Å–ª–∏—Ç—å –±–æ–Ω—É—Å ${referrerId}:`, e.message);
    }

    try {
        await setPremium(newUser.id, 30, NEW_USER_BONUS_DAYS);
        await ctx.reply(`üéÅ –ó–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –ø–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—é –º—ã –¥–∞—Ä–∏–º –≤–∞–º **${NEW_USER_BONUS_DAYS} –¥–Ω—è —Ç–∞—Ä–∏—Ñ–∞ Plus**!`, { parse_mode: 'Markdown' });
    } catch (e) {
         console.error(`[Referral] –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—á–∏—Å–ª–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –±–æ–Ω—É—Å ${newUser.id}:`, e.message);
    }
}