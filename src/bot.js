// src/bot.js

import { Telegraf, Markup } from 'telegraf';
import * as commands from './bot/commands.js';
import * as hears from './bot/hears.js';
import * as actions from './bot/actions.js';
import { updateUserField } from './db.js';
import { allTextsSync } from './config/texts.js';
import { enqueue } from './services/downloadManager.js';

const bot = new Telegraf(process.env.BOT_TOKEN, {
    handlerTimeout: 90_000 // 90 —Å–µ–∫—É–Ω–¥
});

// <<< –ò–°–ü–†–ê–í–õ–ï–ù–û: –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ - "—Å–ø–∞—Å–∞—Ç–µ–ª—å–Ω—ã–π –∫—Ä—É–≥" >>>
bot.catch(async (err, ctx) => {
    console.error(`üî¥ [Telegraf Catch] –ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞ –¥–ª—è update ${ctx.update.update_id}:`, err);
    if (err instanceof Telegraf.TelegramError && err.response?.error_code === 403) {
        const userId = ctx.from?.id;
        if (userId) {
            console.warn(`[Telegraf Catch] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞. –û—Ç–∫–ª—é—á–∞–µ–º.`);
            await updateUserField(userId, 'active', false).catch(dbError => {
                console.error(`[Telegraf Catch] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}:`, dbError);
            });
        }
    }
});

// <<< –í–ê–ñ–ù–û: –≠—Ç–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –ó–î–ï–°–¨, –∞ –Ω–µ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã, –µ—Å–ª–∏ –æ–Ω–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –≤–Ω–µ—à–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏, –∫–æ—Ç–æ—Ä—ã–µ –º—ã —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–º >>>
// –ï—Å–ª–∏ –≤–∞—à–∏ —Ñ–∞–π–ª—ã commands.js, hears.js –∏ —Ç.–¥. –Ω–µ –∏–º–µ—é—Ç —Å–ª–æ–∂–Ω—ã—Ö –∏–º–ø–æ—Ä—Ç–æ–≤, –∏—Ö –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å.
// –ï—Å–ª–∏ –æ–Ω–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç —á—Ç–æ-—Ç–æ –∏–∑ index.js, –∏—Ö –ª–æ–≥–∏–∫—É –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ —Å—é–¥–∞.
// –î–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏, —è –ø–µ—Ä–µ–Ω–µ—Å—É –ª–æ–≥–∏–∫—É text —Å—é–¥–∞.

bot.start(commands.start);
bot.command('admin', commands.admin);

bot.hears('üìã –ú–µ–Ω—é', hears.menu);
bot.hears('‚ÑπÔ∏è –ü–æ–º–æ—â—å', hears.help);
bot.hears('üîì –†–∞—Å—à–∏—Ä–∏—Ç—å –ª–∏–º–∏—Ç', hears.upgrade);
bot.hears('üéµ –ú–æ–∏ —Ç—Ä–µ–∫–∏', hears.myTracks);

bot.action('check_subscription', actions.checkSubscription);

// <<< –ò–°–ü–†–ê–í–õ–ï–ù–û: –õ–æ–≥–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∞ —Å—é–¥–∞ –¥–ª—è —è—Å–Ω–æ—Å—Ç–∏ –∏ –∏–∑–±–µ–∂–∞–Ω–∏—è —Ü–∏–∫–ª–æ–≤ >>>
bot.on('text', async (ctx) => {
    const userId = ctx.from.id;
    const userText = ctx.message.text;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—Å—Ç –∫–æ–º–∞–Ω–¥–æ–π —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    if (Object.values(allTextsSync()).includes(userText)) {
        return; // `bot.hears` —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–ª
    }

    console.log(`[Bot] –ü–æ–ª—É—á–µ–Ω–æ –ù–ï–∫–æ–º–∞–Ω–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç ${userId}, –∏—â–µ–º —Å—Å—ã–ª–∫—É...`);
    try {
        const url = userText.match(/(https?:\/\/[^\s]+)/g)?.find(u => u.includes('soundcloud.com'));
        
        if (url) {
            await enqueue(ctx, userId, url);
        } else {
            await ctx.reply('–Ø –Ω–µ –ø–æ–Ω—è–ª. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏—Ç–µ —Å—Å—ã–ª–∫—É –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é.');
        }
    } catch (e) {
        console.error(`[Bot] –û—à–∏–±–∫–∞ –≤ –æ–±—â–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è ${userId}:`, e);
    }
});

export { bot };